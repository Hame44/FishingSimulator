using UnityEngine;
using System.Collections;

public partial class FishingLogic
{
    
        private IEnumerator HandleCompletion(FishingState completionState)
    {
        StopFightSequence();
        
        string message = completionState == FishingState.Caught ? "üèÜ –†–∏–±–∞ –ø—ñ–π–º–∞–Ω–∞!" : "üí® –†–∏–±–∞ –≤—Ç–µ–∫–ª–∞!";
        Debug.Log(message);
        
        yield return controller.MediumDelay;
        
        // –ó–ú–Ü–ù–ï–ù–û: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –Ω–æ–≤—É –∞–Ω—ñ–º–∞—Ü—ñ—é –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è
        yield return controller.StartCoroutine(controller.FloatAnimation.ReturnToShore());
        yield return controller.StartCoroutine(ResetAfterCompletion());
    }
    
    private IEnumerator ResetAfterCompletion()
    {
        // –ü–æ–ø–ª–∞–≤–æ–∫ –≤–∂–µ —Å—Ö–æ–≤–∞–Ω–∏–π –≤ ReturnToShore()
        
        // –°–∫–∏–¥–∞—î–º–æ –≤—Å—ñ —Å—Ç–∞–Ω–∏
        ResetAllStates();
        
        yield return new WaitForSeconds(1f);
        
        Debug.Log("üé£ –ì–æ—Ç–æ–≤–∏–π –¥–æ –Ω–æ–≤–æ—ó —Ä–∏–±–æ–ª–æ–≤–ª—ñ!");
    }
    
    
    private void ResetAllStates()
    {
        controller.SetReeling(false);
        controller.SetHooked(false);
        controller.SetFishBiting(false);
        controller.SetFloatCast(false);
        controller.SetCurrentFishDistance(0f);
        // controller.SetFightTimer(0f);
        // controller.SetTensionLevel(0f);
        
        // –ó—É–ø–∏–Ω—è—î–º–æ –≤—Å—ñ –∫–æ—Ä—É—Ç—ñ–Ω–∏
        if (controller.FloatBobCoroutine != null)
        {
            controller.StopCoroutine(controller.FloatBobCoroutine);
            controller.SetFloatBobCoroutine(null);
        }
    }
}