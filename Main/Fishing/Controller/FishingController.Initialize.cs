using UnityEngine;
using UnityEngine.UI;
using System.Collections;

public partial class FishingController 
{
    private void InitializeCachedDelays()
    {
        ShortDelay = new WaitForSeconds(0.1f);
        MediumDelay = new WaitForSeconds(2f);
    }
    
    private void InitializeComponents()
    {
        fishingLogic = new FishingLogic(this);
        floatAnimation = new FloatAnimation(this);

        // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ SessionManager
        sessionManager = new SessionManager();

        CreatePlayer();
    }
    
    private void InitializeServices()
    {
        var serviceObject = FindOrCreateServiceObject();
        fishingService = GetOrAddFishingService(serviceObject);
        
        // –ü—ñ–¥–ø–∏—Å—É—î–º–æ—Å—è –Ω–∞ –ø–æ–¥—ñ—ó –ø—ñ—Å–ª—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –≤—Å—ñ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤
        SubscribeToServiceEvents();
    }
    
    private GameObject FindOrCreateServiceObject()
    {
        var serviceObject = GameObject.Find("FishingService");
        return serviceObject ?? new GameObject("FishingService");
    }
    
    private FishingService GetOrAddFishingService(GameObject serviceObject)
    {
        return serviceObject.GetComponent<FishingService>() ?? 
               serviceObject.AddComponent<FishingService>();
    }
    
    private void SubscribeToServiceEvents()
    {
        if (fishingService != null)
        {
            // –ü—ñ–¥–ø–∏—Å—É—î–º–æ—Å—è –Ω–∞ –ø–æ–¥—ñ—ó —Å–µ—Ä–≤—ñ—Å—É
            Debug.Log("üîî –ü—ñ–¥–ø–∏—Å–∫–∞ –Ω–∞ –ø–æ–¥—ñ—ó FishingService");
        }
    }
    
    private void SetupInitialState()
    {
        // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤—ñ –ø–æ–∑–∏—Ü—ñ—ó –ø–æ–ø–ª–∞–≤–∫–∞
        if (floatAnimation != null)
        {
            floatAnimation.SetupFloatStartPosition();
        }

        // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ UI –∫–Ω–æ–ø–∫–∏
        SetupUIButtons();
        
        CurrentState = FishingState.Ready;
        
        Debug.Log("‚úÖ FishingController —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ");
    }

    private void SetupUIButtons()
    {
        // –ü—Ä–∏–≤'—è–∑—É—î–º–æ –∫–Ω–æ–ø–∫–∏ –¥–æ –º–µ—Ç–æ–¥—ñ–≤
        if (castButton != null)
        {
            castButton.onClick.RemoveAllListeners();
            castButton.onClick.AddListener(CastLine);
            Debug.Log("üéØ –ö–Ω–æ–ø–∫–∞ –∑–∞–∫–∏–¥—É –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∞");
        }
        else
        {
            Debug.LogWarning("‚ö†Ô∏è castButton –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞ –≤ Inspector!");
        }

        if (hookPullButton != null)
        {
            hookPullButton.onClick.RemoveAllListeners();
            hookPullButton.onClick.AddListener(HookingFish);
        }

        if (releaseButton != null)
        {
            releaseButton.onClick.RemoveAllListeners();
            releaseButton.onClick.AddListener(PullingLine);
        }
    }

    private void CreatePlayer()
    {
        currentPlayer = new Player 
        { 
            Id = 1, 
            Name = "–†–∏–±–∞–ª–∫–∞",
            Strength = 10f,
            Experience = 0,
            Equipment = new Equipment
            {
                RodDurability = 100f,
                LineDurability = 100f,
                LineLength = 10f,
                FishingLuck = 1.2f
            }
        };
        
        Debug.Log($"üë§ –ì—Ä–∞–≤–µ—Ü—å —Å—Ç–≤–æ—Ä–µ–Ω–∏–π: {currentPlayer.Name}");
    }
}